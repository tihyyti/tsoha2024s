CREATE TABLE CLIENT (
	ID SERIAL NOT NULL PRIMARY KEY,
	USERNAME VARCHAR(50) NOT NULL UNIQUE,
	PASSWORD VARCHAR(25) DEFAULT NULL,
	EMAIL VARCHAR(80) DEFAULT NULL,
	SECONDARYEMAIL VARCHAR(80) DEFAULT NULL,
	USERICON_URL VARCHAR(80) DEFAULT NULL, -- Link to user's user's icon metadata file
	ROLE_ID INT NOT NULL,
	BLOCKED BOOLEAN DEFAULT FALSE,
	LATESTBIDHEADER_ID INT,
	FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ID),
	FOREIGN KEY (USERICON_URL) REFERENCES IMAGEMETADATA (ID),
	FOREIGN KEY (LATESTBIDHEADER_ID) REFERENCES BIDHEADER (ID)
);

CREATE TABLE ROLE (
	ID SERIAL NOT NULL PRIMARY KEY,
	ROLENAME VARCHAR(80) NOT NULL UNIQUE,
	REGISTEREDUSER BOOLEAN DEFAULT FALSE,
	SELLERROLE BOOLEAN DEFAULT FALSE,
	BUYERROLE BOOLEAN DEFAULT FALSE,
	ADMINROLE BOOLEAN DEFAULT FALSE
);

CREATE TABLE BIDGENRE (
	ID SERIAL NOT NULL PRIMARY KEY,
	BIDGENREHEADER VARCHAR(100) NOT NULL UNIQUE,
	USER_ID INT,
	LASTBIDHEADER_ID INT,
	NUMBEROFBIDS INT NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES CLIENT (ID),
	FOREIGN KEY (LASTBIDHEADER_ID) REFERENCES BIDHEADER (ID)
);

CREATE TABLE BIDHEADER (
	ID SERIAL NOT NULL PRIMARY KEY,
	USER_ID INT,
	BIDGENRE_ID INT,
	BIDTYPECODE INT,
	BIDSTATUS INT,
	BIDCONTENT_ID INT,
	BIDHEADERTEXT VARCHAR(100) NOT NULL UNIQUE,
	BIDEXCHANGE1_ID INT,
	BIDEXCHANGE2_ID INT,
	BIDEXCHANGE3_ID INT,
	BIDEXCHANGE4_ID INT,
	BIDEXCHANGE5_ID INT,
	BIDSTARTEDTIME TIMESTAMP NOT NULL,
	BIDENDINGTIME TIMESTAMP NOT NULL,
	HDREDITEDTIME TIMESTAMP NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES CLIENT(ID),
	FOREIGN KEY (BIDGENRE_ID) REFERENCES BIDGENRE (ID),
	FOREIGN KEY (BIDCONTENT_ID) REFERENCES BIDCONTENT (ID),
	FOREIGN KEY (BIDEXCHANGE1_ID) REFERENCES BIDEXCHANGE (ID),
	FOREIGN KEY (BIDEXCHANGE2_ID) REFERENCES BIDEXCHANGE (ID),
	FOREIGN KEY (BIDEXCHANGE3_ID) REFERENCES BIDEXCHANGE (ID),
	FOREIGN KEY (BIDEXCHANGE4_ID) REFERENCES BIDEXCHANGE (ID),
	FOREIGN KEY (BIDEXCHANGE5_ID) REFERENCES BIDEXCHANGE (ID)
);

CREATE TABLE BIDCONTENT (
	ID SERIAL NOT NULL PRIMARY KEY,
	BIDHEADER_ID INT,
	BIDCONTENT VARCHAR(500) NOT NULL,
	GEAR1_ID INT,
	GEAR2_ID INT,
	GEAR3_ID INT,
	GEAR4_ID INT,
	GEAR5_ID INT,
	GEAR6_ID INT,
	GEAR7_ID INT,
	GEAR8_ID INT,
	GEAR9_ID INT,
	GEAR10_ID INT,
	CONEDITEDTIME TIMESTAMP NOT NULL,
	BUNDLEIMAGE_ID INT, -- Link to bundle image metadata file
	BUNDLESOUND_ID INT, -- Links to bundle sound sample metadata file
	FOREIGN KEY (BIDHEADER_ID) REFERENCES BIDHEADER (ID),
	FOREIGN KEY (BUNDLEIMAGE_ID) REFERENCES IMAGEMETADATA (ID),
	FOREIGN KEY (BUNDLESOUND_ID) REFERENCES SOUNDCLIPMETADATA (ID),
	FOREIGN KEY (GEAR1_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR2_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR3_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR4_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR5_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR6_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR7_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR8_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR9_ID) REFERENCES GEAR (ID),
	FOREIGN KEY (GEAR10_ID) REFERENCES GEAR (ID)
);

CREATE TABLE GEAR (
	ID SERIAL NOT NULL PRIMARY KEY,
	GEARBRAND VARCHAR(30) NOT NULL,
	GEARCODE INT,
	GEARSTATUS INT,
	BIDHEADER_ID INT,
	GEARNAME VARCHAR(100) NOT NULL,
	GEARDETAILS TEXT,
	GEARSTORY TEXT,
	AMOUNTOFFERED INT NOT NULL,
	APPROXVALUE FLOAT DEFAULT 0.00,
	USER_ID INT,
	COMMENTS TEXT,
	EDITEDTIME TIMESTAMP NOT NULL,
	GEARIMAGE_ID INT, -- Links to gear image metadata file
	SOUNDCLIP_ID INT, -- Links to gear sound sample metadata file
	FOREIGN KEY (USER_ID) REFERENCES CLIENT (ID),
	FOREIGN KEY (BIDHEADER_ID) REFERENCES BIDHEADER (ID),
	FOREIGN KEY (GEARIMAGE_ID) REFERENCES IMAGEMETADATA (ID),
	FOREIGN KEY (SOUNDCLIP_ID) REFERENCES SOUNDCLIPMETADATA (ID)
);

CREATE TABLE BIDEXCHANGE --This table will allow bidders to exchange equipment based on their bids.
(
	ID SERIAL NOT NULL PRIMARY KEY,
	SALESBIDDER_ID INT NOT NULL, -- ID of the initial bidder (sales-bidder)
	SALESBIDHEADER_ID INT NOT NULL, -- ID of the sales offer header
	PURCHASEBIDDER_ID INT NOT NULL, -- ID of the bidder making the purchase offer
	PURCHASEBIDHEADER_ID INT NOT NULL, -- ID of the purchase offer header
	AGREEDDEAL BOOLEAN DEFAULT FALSE, -- Indicates if the deal is mutually agreed upon
	DEALTIMESTAMP TIMESTAMP NOT NULL, -- Timestamp when the deal was made
	FOREIGN KEY (SALESBIDDER_ID) REFERENCES CLIENT (ID),
	FOREIGN KEY (SALESBIDHEADER_ID) REFERENCES BIDHEADER (ID),
	FOREIGN KEY (PURCHASEBIDDER_ID) REFERENCES CLIENT(ID), 
	FOREIGN KEY (PURCHASEBIDHEADER_ID) REFERENCES BIDHEADER (ID)
);

CREATE TABLE IMAGEMETADATA (
	ID SERIAL NOT NULL PRIMARY KEY,
	IMAGENAME VARCHAR(100) NOT NULL,
	AXSIZE VARCHAR(10) NOT NULL,
	RESOLUTION VARCHAR(20) NOT NULL,
	IMAGE_URL VARCHAR(255) NOT NULL -- Link to the actual image file
);

CREATE TABLE SOUNDCLIPMETADATA (
	ID SERIAL NOT NULL PRIMARY KEY,
	CLIPNAME VARCHAR(100) NOT NULL,
	FORMAT VARCHAR(10) NOT NULL, -- e.g., '.wav', '.mp3', etc.
	QUALITY VARCHAR(30) NOT NULL, -- e.g., '24-bit WAV', '196 kbps MP3', etc.
	CLIPLENGTHINSECONDS FLOAT NOT NULL,
	ISSTEREO BOOLEAN NOT NULL,
	SAMPLE_URL VARCHAR(255) NOT NULL -- Link to the actual sound sample file
);

-- Check following updates:
CREATE VIEW BIDGENRELIST AS
SELECT
	BG.ID,
	BG.BIDGENREHEADER,
	COUNT(BC.ID) AS COUNT,
	MAX(BC.EDITEDTIME) AS LATEST
FROM
	BIDGENRE BG
	LEFT JOIN BIDHEADER BHR ON (BG.ID = BHR.BIDGENRE_ID)
	LEFT JOIN BIDCONTENT BC ON (BHR.ID = BC.BIDHEADER_ID)
GROUP BY
	BG.ID,
	BG.BIDGENREHEADER;

CREATE VIEW BIDLIST AS
SELECT
	BH.ID,
	BH.INITIALBIDDER,
	BH.BIDGENRE_ID,
	BH.BIDTYPECODE,
	BH.BIDSTATUS,
	BH.BIDHEADERTEXT,
	COUNT(*) AS COUNT,
	MIN(BC.EDITEDTIME) AS EDITED,
	MAX(BC.EDITEDTIME) AS LATEST
FROM
	BIDHEADER BH
	LEFT JOIN BIDCONTENT BC ON (BH.ID = BC.BIDHEADER_ID)
GROUP BY
	BH.ID,
	BH.BIDHEADERTEXT,
	BH.INITIALBIDDER,
	BH.BIDGENRE_ID
ORDER BY
	MAX(BC.EDITEDTIME) DESC;